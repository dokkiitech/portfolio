
name: Deploy to On-Premise with Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    outputs:
      plan_exit_code: ${{ steps.plan.outputs.exitcode }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure Terraform Credentials
        run: |
          cat > ~/.terraformrc <<EOF
          credentials "app.terraform.io" {
            token = "${{ secrets.TF_API_TOKEN }}"
          }
          EOF

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: ./terraform
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
          TF_VAR_server_ip: ${{ secrets.SERVER_IP }}
          TF_VAR_server_user: ${{ secrets.SERVER_USER }}
          TF_VAR_server_ssh_port: ${{ secrets.SERVER_SSH_PORT }}
          TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

  terraform_apply:
    name: 'Terraform Apply'
    needs: terraform_plan
    if: success()
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure Terraform Credentials
        run: |
          cat > ~/.terraformrc <<EOF
          credentials "app.terraform.io" {
            token = "${{ secrets.TF_API_TOKEN }}"
          }
          EOF

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color
        working-directory: ./terraform
        env:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
          TF_VAR_server_ip: ${{ secrets.SERVER_IP }}
          TF_VAR_server_user: ${{ secrets.SERVER_USER }}
          TF_VAR_server_ssh_port: ${{ secrets.SERVER_SSH_PORT }}
          TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
